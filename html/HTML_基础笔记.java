package cn.itheima.HTML;

/**
 * shadow
 * 2019/3/12 9:12
 * HTML : hyper text markup language  -- 超文本标记语言
 *      最基础的网页开发语言. 是一种描述网页结构的方式
 *      普通文本 只能存放 文字,超文本可以存放 文字,图片,音频等信息, 能被 浏览器 直接解析, 需要使用内置提供的 标签
 *      超文本:使用超链接的方法,将各种不同空间的文字信息组织在一起的网状文本
 *      标记语言:由标签构成的语言. <标签名称> 如 html, xml
 *          标记语言不是编程语言
 * 语法:
 *      1.HTML 文档后缀名: .html or .htm
 *      2.标签分类: --- HTML 的 [元素 element] 称为 标签(以标签的形式表示: 尖括号) -- 元素有属性: 属性总是以 名称/值 对的形式出现，比如：name="value"。
 *            属性值应该始终被包括在引号内。双引号是最常用的，不过使用单引号也没有问题。
 *              在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号
 *          <开始标签>内容</结束标签> : 没有内容的标签 可以在开始标签中 关闭
 *          1). 围堵标签: 有开始标签和结束标签. 如 开始<html>, 结束</html>
 *          2). 自闭和标签: 开始标签和结束标签 在一起. 如 <br/>(换行)
 *      3.标签可以嵌套
 *      4.在开始标签中可以定义属性.属性有键值对构成,值需要用引号
 *      5.html 标签不区分大小写,建议小写
 *      6.html 标签的属性在 开始标签 中, 可以是多个,使用空格隔开
 *      7.<!--...--> 定义一个注释
 *  标签:
 *      标签(元素) 的一般属性: class, id, style, title(显示额外信息)
 *      1.文件标签 : html 基本标签
 *          <html></html>: html文档的根标签
 *          <head></head>: 头标签. 用于指定 html 文档的一些属性. 引入外部资源
 *                  一般可以包含的标签: title(标题), base(页面链接标签的默认链接地址), link(引入外部资源), meta(字符集等), script(js代码), style(HTML 文档样式)
 *          <title></title>: 标题标签
 *          <body></body>: 体标签
 *          <meta/>: 字符集
 *      2.文本标签: 文本有关标签
 *          1) <br/> 或 <br>  在不产生新段落的情况下换行
 *          2) <h1> to <h6> 定义 HTML 标题(heading) -- 标题等级 1-6 // 浏览器会自动地在标题的前后添加空行。
 *          3) <p> 定义一个段落
 *          4) <hr> 定义水平线。
 *              属性:
 *               color : 颜色
 *               width : 宽度
 *               size : 高度
 *               align : 对齐方式
 *                  center / left / right
 *          5) <b> : 字体加粗 -- 格式化标签
 *          6) <i> : 斜体 -- 格式化标签
 *          7) <font> : 字体标签
 *              color / size / face(字体样式)
 *              定义属性:
 *                  color :
 *                      1) 英文单词: red,green,blue...
 *                      2) RGB(值1, 值2, 值3) : 0~255
 *                      3) #值1值2值3 : 00~FF之间 eg: #FF00FF
 *                  width:
 *                      1) 数值 : width='20'  单位 px (像素)
 *                      2) 百分比值 : 相对于 父元素(外层标签) 的占比
 *           8) <center> : 文字居中标签
 *           特殊字符:
 *              空格: &nbsp
 *       注意: 对于 HTML，您无法通过在 HTML 代码中添加额外的空格或换行来改变输出的效果。
 *              当显示页面时，浏览器会移除源代码中多余的空格和空行。所有连续的空格或空行都会被算作一个空格。
 *              需要注意的是，HTML 代码中的所有连续的空行（换行）也被显示为一个空格。
 *
 *      3.图片标签
 *          <img></img>
 *             属性
 *              src="相对路径"
 *                  ./ html 文件当前目录
 *                  ../ html 文件上一级目录(多级类推)
 *              alt="文本内容"
 *                  图片无法加载时,显示的内容
 *              title : 鼠标移动到图片显示的文字信息
 *              width : 宽度(像素)
 *              height: 高度(像素)
 *
 *      4.列表标签
 *              有序列表: 内容以列表排列,标题具有顺序标识,默认是数字, 可以通过 type 修改
 *              <ol> + <li> : order list
 *                  <ol type="I" start="IV"><!--指定排序的方式 罗马数字标识-->
 *                      <li>睁眼</li>
 *                      <li>看手机</li>
 *                      <li>穿衣</li>
 *                      <li>洗漱</li>
 *                  </ol>
 *              无序列表: 内容以非数字/字母形式表示顺序
 *                  <ul> + <li> :
 *                  ul:
 *                  li:
 *              自定义列表:
 *                  <dl>
 *                      <dt>列表名</dt>
 *                          <dd>子目录</dd>
 *                          <dd>子目录</dd>
*                       <dt>列表名</dt>
 *                          <dd>子目录</dd>
 *                  </dl>
 *      5.链接标签
 *              <a herf="url" target="_blank">文字/图片</a> :
 *              属性:
 *                  href : 值--指定 url
 *                      (网络资源/本地资源/本机电脑邮箱)
 *                  target:
 *                      值:
 *                      _self : 当前页面打开
 *                      _blank : 空白页面打开
 *      6. 块级标签 和 内联标签:
 *              块级标签(block-level): 一个内容占满一行 (自带换行: 可以使用CSS 中的浮动 float,让不同的 div 在一行显示) -- div, p, h1-h6, hr
 *              内联标签(inline): 一个内容只占指定文本/图片大小 (不自动换行,不能在属性中设置居中) -- img, font, span
 *              div 和 span : 本身没有特定含义 -- 与 CSS/JS 连用,可以设置 文本样式
 *              div 标签中可以配合 CSS 设置 style 属性的值: cn/itheima/CSS/CSS基础笔记.java
 *      7. 语义化标签: h5 中为了提高程序的可读性,
 *          <header>
 *          <footer>
 *      8.表格标签
 *          只有行,没有列 //单独操作每一行
 *          <table> -- 表
 *              width : 宽度
 *              border : 边框
 *              cellpadding: 单元格中的内容与单元格的距离 -- 默认是 border 的大小
 *              cellspacing: 单元格之间的距离. 默认是 border 大小. 若指定为 0 ,则单元格的线会合为一条
 *              bgcolor: background color
 *              align : 表格居中方式
 *          <tr> -- 行 (一行一个 tr)
 *              bgcolor
 *              align
 *          <td> -- 单元格 (定义 一行表格的列) --table data
 *              colspan : 合并列 -- 合并单元格
 *              rowspan : 合并行
 *          <th> -- 表头单元格 -- 表头的文字 自动 加粗,居中
 *          <caption> : 表标题 -- 自动居中
 *          <thead> : 表头
 *          <tbody></tbody> :
 *          <tfoot></tfoot>
 * 注意: 虽然我们可以使用HTML table标签来设计出漂亮的布局，但是table标签是不建议作为布局工具使用的 - 表格不是布局工具。
 *      即使可以使用 HTML 表格来创建漂亮的布局，但设计表格的目的是呈现表格化数据 - 表格不是布局工具！
 *
 *  HTML 布局 - 有用的提示
 *  Tip: 使用 CSS 最大的好处是，如果把 CSS 代码存放到外部样式表中，那么站点会更易于维护。通过编辑单一的文件，就可以改变所有页面的布局。
 *  Tip: 由于创建高级的布局非常耗时，使用模板是一个快速的选项。通过搜索引擎可以找到很多免费的网站模板（您可以使用这些预先构建好的网站布局，并优化它们）。
 *
 *   9. script 标签:
 *      <script> 标签用于定义客户端脚本，比如 JavaScript。
 *      <script> 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。
 *      JavaScript 最常用于图片操作、表单验证以及内容动态更新。
 *
 *
 */
public class HTML_基础笔记 {
}
